name: Midnight build 2
on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest commit date
        run:  |
              commit_date=$(curl -s https://api.github.com/repos/enricoros/big-agi/commits/main | jq -r '.commit.committer.date')
              echo "::set-output name=commit_date::$commit_date"
        id: get_commit_date

      - name: Check if commit date has changed
        run:  |
              previous_commit_date=$(cat previous_commit_date.txt 2>/dev/null || echo "")
              if [ "$previous_commit_date" != "${{ steps.get_commit_date.outputs.commit_date }}" ]; then
                echo "Commit date has changed"
                echo "${{ steps.get_commit_date.outputs.commit_date }}" > previous_commit_date.txt
              else
                echo "Commit date has not changed"
              fi
      # - name: Get feed content and compare
      #   id:   compare
      #   run:  |
      #         apt-get update
      #         apt-get install curl jq -y
      #         previous_commit_date=$(cat previous_commit_date.txt)
      #         commit_date=$(curl -s "https://api.github.com/repos/enricoros/big-agi/commits/main" | jq -r '.commit.committer.date')
      #         if [ "$commit_date" == "$previous_commit_date" ]; then
      #           exit 0
      #         else
      #           echo "$commit_date" > previous_commit_date.txt
      #           exit 1
      #         fi
      
      # - name: Manage artifact file
      #   if:   steps.compare.outcome == 'failure'
      #   run:  |
      #         echo "$commit_date" > previous_commit_date.txt
      #         echo "::set-output name=last_updated::$(cat previous_commit_date.txt)"
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: last_updated
      #     path: previous_commit_date.txt

      # - name: Login to Docker
      #   if: steps.compare.outcome == 'failure'
      #   uses: docker/login-action@v1
      #   with:
      #     registry: docker.io
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build Docker image
      #   if: steps.compare.outcome == 'failure'
      #   run: |
      #     docker build -t big-agi:latest .
      #     docker tag big-agi:latest my-repo/my-image:latest

      # - name: Push Docker image
      #   if: steps.compare.outcome == 'failure'
      #   run: docker push my-repo/my-image:latest
      #   env:
      #     DOCKER_CLI_EXPERIMENTAL: enabled
      #     DOCKER_BUILDKIT: 1
